{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/rock-paper/src/components/ResultsScreen.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport Button from '@material-ui/core/Button';\nimport OwnHand from '../components/OwnHand';\nimport CompHand from '../components/CompHand';\nconst propTypes = {\n  showResult: PropTypes.object,\n  setShowResult: PropTypes.func,\n  resultType: PropTypes.string,\n  compHand: PropTypes.src,\n  setCompResult: PropTypes.func\n};\n\nconst ResultsScreen = ({\n  showResult,\n  setShowResult,\n  resultType,\n  compHand,\n  setCompResult\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OwnHand, {\n    showResult: showResult,\n    resultType: resultType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flexCol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.resultText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \" \", resultType, \" \"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      setShowResult({\n        src: null,\n        color: null\n      });\n      setCompResult({\n        src: null,\n        color: null\n      });\n    },\n    classes: {\n      root: styles.buttonRestart\n    },\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \" Play Again\")), /*#__PURE__*/React.createElement(CompHand, {\n    compHand: compHand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst styles = {\n  root: css({\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }),\n  buttonRestart: css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 40,\n      borderRadius: 8,\n      backgroundColor: 'white',\n      color: 'black'\n    }\n  }),\n  flexCol: css({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 32\n  }),\n  resultText: css({\n    color: 'white',\n    fontSize: 32,\n    textTransform: 'uppercase',\n    marginBottom: 16\n  })\n};\nResultsScreen.propTypes = propTypes;\nexport default ResultsScreen;","map":{"version":3,"sources":["/Users/yonatanronen/dev/rock-paper/src/components/ResultsScreen.jsx"],"names":["React","PropTypes","css","Button","OwnHand","CompHand","propTypes","showResult","object","setShowResult","func","resultType","string","compHand","src","setCompResult","ResultsScreen","styles","root","flexCol","resultText","color","buttonRestart","width","display","alignItems","justifyContent","height","borderRadius","backgroundColor","flexDirection","marginLeft","fontSize","textTransform","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport Button from '@material-ui/core/Button';\nimport OwnHand from '../components/OwnHand';\nimport CompHand from '../components/CompHand';\n\nconst propTypes = {\n  showResult: PropTypes.object,\n  setShowResult: PropTypes.func,\n  resultType: PropTypes.string,\n  compHand: PropTypes.src,\n  setCompResult: PropTypes.func,\n};\n\nconst ResultsScreen = ({ showResult, setShowResult, resultType, compHand, setCompResult }) => {\n  return (\n    <div className={styles.root}>\n      <OwnHand showResult={showResult} resultType={resultType}/>\n      <div className={styles.flexCol}>\n        <span className={styles.resultText}> {resultType} </span>\n        <Button\n          onClick={() => {\n            setShowResult({\n              src: null,\n              color: null\n            });\n            setCompResult({\n              src: null,\n              color: null,\n            });\n          }}\n          classes={{\n            root: styles.buttonRestart\n          }}\n          variant=\"contained\"\n        > Play Again\n        </Button>\n      </div>\n      <CompHand compHand={compHand}/>\n    </div>\n  );\n};\n\nconst styles = {\n  root: css({\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }),\n  buttonRestart: css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 40,\n      borderRadius: 8,\n      backgroundColor: 'white',\n      color: 'black'\n    }\n  }),\n  flexCol: css({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 32,\n  }),\n  resultText: css({\n    color: 'white',\n    fontSize: 32,\n    textTransform: 'uppercase',\n    marginBottom: 16,\n  })\n};\n\nResultsScreen.propTypes = propTypes;\n\nexport default ResultsScreen;\n"]},"metadata":{},"sourceType":"module"}