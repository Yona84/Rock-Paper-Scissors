{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/rock-paper/src/components/InitialScreen.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { css } from 'emotion';\nimport rock from \"../images/icon-rock.svg\";\nimport paper from \"../images/icon-paper.svg\";\nimport scissors from \"../images/icon-scissors.svg\";\nconst propTypes = {\n  setShowResult: PropTypes.func\n};\nconst buttons = [{\n  color: 'red',\n  src: rock\n}, {\n  color: 'yellow',\n  src: paper\n}, {\n  color: 'blue',\n  src: scissors\n}];\n\nconst InitialScreen = ({\n  setShowResult\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, buttons.map(button => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setShowResult(button.src),\n      key: button.src,\n      classes: {\n        root: styles.button({\n          color: button.color,\n          withDisplayBlock: button.color === 'blue',\n          withMarginRight: button.color === 'red'\n        })\n      },\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/React.createElement(\"img\", {\n        src: button.src,\n        alt: \"hand\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 28\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nconst styles = {\n  root: css({\n    width: '100%'\n  }),\n  button: ({\n    color,\n    withDisplayBlock,\n    withMarginRight\n  }) => css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 200,\n      borderRadius: '50%',\n      display: withDisplayBlock ? 'block' : 'inline',\n      backgroundColor: 'white',\n      border: `20px solid ${color}`,\n      margin: 'auto',\n      marginRight: withMarginRight ? 24 : 'auto'\n    }\n  })\n};\nInitialScreen.propTypes = propTypes;\nexport default InitialScreen;","map":{"version":3,"sources":["/Users/yonatanronen/dev/rock-paper/src/components/InitialScreen.jsx"],"names":["React","PropTypes","Button","css","propTypes","setShowResult","func","buttons","color","src","rock","paper","scissors","InitialScreen","styles","root","map","button","withDisplayBlock","withMarginRight","width","height","borderRadius","display","backgroundColor","border","margin","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,GAAT,QAAoB,SAApB;;;;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,aAAa,EAAEJ,SAAS,CAACK;AADT,CAAlB;AAIA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,GAAG,EAAEC;AAFP,CADc,EAKd;AACEF,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,GAAG,EAAEE;AAFP,CALc,EASd;AACEH,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,GAAG,EAAEG;AAFP,CATc,CAAhB;;AAeA,MAAMC,aAAa,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAuB;AAC3C,sBACE;AAAK,IAAA,SAAS,EAAES,MAAM,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIR,OAAO,CAACS,GAAR,CAAYC,MAAM,IAAI;AACpB,wBACE,uDACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMZ,aAAa,CAACY,MAAM,CAACR,GAAR,CAD9B;AAEE,MAAA,GAAG,EAAEQ,MAAM,CAACR,GAFd;AAGE,MAAA,OAAO,EAAE;AACPM,QAAAA,IAAI,EAAED,MAAM,CAACG,MAAP,CAAc;AAClBT,UAAAA,KAAK,EAAES,MAAM,CAACT,KADI;AAElBU,UAAAA,gBAAgB,EAAED,MAAM,CAACT,KAAP,KAAiB,MAFjB;AAGlBW,UAAAA,eAAe,EAAEF,MAAM,CAACT,KAAP,KAAiB;AAHhB,SAAd;AADC,OAHX;AAUE,MAAA,OAAO,EAAC,WAVV;AAWE,MAAA,SAAS,eAAE;AAAK,QAAA,GAAG,EAAES,MAAM,CAACR,GAAjB;AAAsB,QAAA,GAAG,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAiBD,GAlBD,CAFJ,CADF;AAyBD,CA1BD;;AA4BA,MAAMK,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAEZ,GAAG,CAAC;AACRiB,IAAAA,KAAK,EAAE;AADC,GAAD,CADI;AAIbH,EAAAA,MAAM,EAAE,CAAC;AAAET,IAAAA,KAAF;AAASU,IAAAA,gBAAT;AAA2BC,IAAAA;AAA3B,GAAD,KAAkDhB,GAAG,CAAC;AAC5D,wBAAoB;AAClBiB,MAAAA,KAAK,EAAE,GADW;AAElBC,MAAAA,MAAM,EAAE,GAFU;AAGlBC,MAAAA,YAAY,EAAE,KAHI;AAIlBC,MAAAA,OAAO,EAAEL,gBAAgB,GAAG,OAAH,GAAa,QAJpB;AAKlBM,MAAAA,eAAe,EAAE,OALC;AAMlBC,MAAAA,MAAM,EAAG,cAAajB,KAAM,EANV;AAOlBkB,MAAAA,MAAM,EAAE,MAPU;AAQlBC,MAAAA,WAAW,EAAER,eAAe,GAAG,EAAH,GAAQ;AARlB;AADwC,GAAD;AAJhD,CAAf;AAkBAN,aAAa,CAACT,SAAd,GAA0BA,SAA1B;AAEA,eAAeS,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { css } from 'emotion';\nimport rock from '../images/icon-rock.svg';\nimport paper from '../images/icon-paper.svg';\nimport scissors from '../images/icon-scissors.svg';\n\nconst propTypes = {\n  setShowResult: PropTypes.func,\n};\n\nconst buttons = [\n  {\n    color: 'red',\n    src: rock,\n  },\n  {\n    color: 'yellow',\n    src: paper,\n  },\n  {\n    color: 'blue',\n    src: scissors,\n  }\n];\n\nconst InitialScreen = ({ setShowResult }) => {\n  return (\n    <div className={styles.root}>\n      {\n        buttons.map(button => {\n          return (\n            <>\n              <Button\n                onClick={() => setShowResult(button.src)}\n                key={button.src}\n                classes={{\n                  root: styles.button({\n                    color: button.color,\n                    withDisplayBlock: button.color === 'blue',\n                    withMarginRight: button.color === 'red'\n                  })\n                }}\n                variant=\"contained\"\n                startIcon={<img src={button.src} alt='hand'/>}\n              />\n            </>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nconst styles = {\n  root: css({\n    width: '100%'\n  }),\n  button: ({ color, withDisplayBlock, withMarginRight }) => css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 200,\n      borderRadius: '50%',\n      display: withDisplayBlock ? 'block' : 'inline',\n      backgroundColor: 'white',\n      border: `20px solid ${color}`,\n      margin: 'auto',\n      marginRight: withMarginRight ? 24 : 'auto'\n    }\n  })\n};\n\nInitialScreen.propTypes = propTypes;\n\nexport default InitialScreen;\n"]},"metadata":{},"sourceType":"module"}