{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/rock-paper/src/components/Game.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport InitialScreen from '../components/InitialScreen';\nimport ResultsScreen from '../components/ResultsScreen';\nimport rock from \"../images/icon-rock.svg\";\nimport paper from \"../images/icon-paper.svg\";\nimport scissors from \"../images/icon-scissors.svg\";\nconst propTypes = {\n  setScore: PropTypes.func\n};\nconst handTypes = ['Paper', 'Rock', 'Scissors'];\nconst srcTypes = {\n  ['Paper']: {\n    src: paper,\n    color: 'yellow'\n  },\n  ['Rock']: {\n    src: rock,\n    color: 'red'\n  },\n  ['Scissors']: {\n    src: scissors,\n    color: 'blue'\n  }\n};\n\nconst Game = ({\n  setScore,\n  score\n}) => {\n  const [showResult, setShowResult] = React.useState({\n    src: null,\n    color: null,\n    handType: null\n  });\n  const [resultType, setResultType] = React.useState('');\n  const [compResult, setCompResult] = React.useState({\n    src: '',\n    color: ''\n  });\n  const firstUpdate = React.useRef(true);\n  React.useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    const compHand = handTypes[Math.floor(Math.random() * handTypes.length)];\n    const newCompResultSrc = srcTypes[compHand].src;\n    const newCompResultColor = srcTypes[compHand].color;\n\n    if (showResult.src !== null) {\n      setCompResult({ ...compResult,\n        src: newCompResultSrc,\n        color: newCompResultColor\n      });\n    }\n\n    switch (true) {\n      case compHand === 'Paper' && showResult.handType === 'Paper' || compHand === 'Rock' && showResult.handType === 'Rock' || compHand === 'Scissors' && showResult.handType === 'Scissors':\n        {\n          setResultType('Draw');\n          return;\n        }\n\n      case compHand === 'Paper' && showResult.handType === 'Scissors' || compHand === 'Rock' && showResult.handType === 'Paper' || compHand === 'Scissors' && showResult.handType === 'Rock':\n        {\n          setResultType('You Win!');\n          const newScore = score++;\n          setScore(newScore);\n          return;\n        }\n\n      case compHand === 'Paper' && showResult.handType === 'Rock' || compHand === 'Rock' && showResult.handType === 'Scissors' || compHand === 'Scissors' && showResult.handType === 'Paper':\n        {\n          setResultType('You Lose');\n          return;\n        }\n    }\n  }, [showResult]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, showResult.src && compResult.src ? /*#__PURE__*/React.createElement(ResultsScreen, {\n    showResult: showResult,\n    setShowResult: setShowResult,\n    resultType: resultType,\n    compHand: compResult,\n    setCompResult: setCompResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(InitialScreen, {\n    setShowResult: setShowResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst styles = {\n  root: css({\n    marginTop: 32\n  })\n};\nGame.propTypes = propTypes;\nexport default Game;","map":{"version":3,"sources":["/Users/yonatanronen/dev/rock-paper/src/components/Game.jsx"],"names":["React","PropTypes","css","InitialScreen","ResultsScreen","propTypes","setScore","func","handTypes","srcTypes","src","paper","color","rock","scissors","Game","score","showResult","setShowResult","useState","handType","resultType","setResultType","compResult","setCompResult","firstUpdate","useRef","useEffect","current","compHand","Math","floor","random","length","newCompResultSrc","newCompResultColor","newScore","styles","root","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport InitialScreen from '../components/InitialScreen';\nimport ResultsScreen from '../components/ResultsScreen';\nimport rock from '../images/icon-rock.svg';\nimport paper from '../images/icon-paper.svg';\nimport scissors from '../images/icon-scissors.svg';\n\nconst propTypes = {\n  setScore: PropTypes.func,\n};\n\nconst handTypes = [ 'Paper', 'Rock', 'Scissors' ];\n\nconst srcTypes = {\n  [ 'Paper' ]: {\n    src: paper,\n    color: 'yellow',\n  },\n  [ 'Rock' ]: {\n    src: rock,\n    color: 'red',\n  },\n  [ 'Scissors' ]: {\n    src: scissors,\n    color: 'blue'\n  }\n};\n\nconst Game = ({ setScore, score }) => {\n\n    const [ showResult, setShowResult ] = React.useState({\n      src: null,\n      color: null,\n      handType: null\n    });\n\n    const [ resultType, setResultType ] = React.useState('');\n\n    const [ compResult, setCompResult ] = React.useState({\n      src: '',\n      color: ''\n    });\n\n    const firstUpdate = React.useRef(true);\n    React.useEffect(() => {\n      if (firstUpdate.current) {\n        firstUpdate.current = false;\n        return;\n      }\n      const compHand = handTypes[ Math.floor(Math.random() * handTypes.length) ];\n\n      const newCompResultSrc = srcTypes[ compHand ].src;\n      const newCompResultColor = srcTypes[ compHand ].color;\n\n      if (showResult.src !== null) {\n        setCompResult({\n          ...compResult,\n          src: newCompResultSrc,\n          color: newCompResultColor\n        });\n      }\n\n      switch (true) {\n        case ( compHand === 'Paper' && showResult.handType === 'Paper' ) || ( compHand === 'Rock' && showResult.handType === 'Rock' ) || ( compHand === 'Scissors' && showResult.handType === 'Scissors' ) : {\n          setResultType('Draw');\n          return;\n        }\n        case ( compHand === 'Paper' && showResult.handType === 'Scissors' ) || ( compHand === 'Rock' && showResult.handType === 'Paper' ) || ( compHand === 'Scissors' && showResult.handType === 'Rock' ) : {\n          setResultType('You Win!');\n          const newScore = score++;\n          setScore(newScore);\n          return;\n        }\n        case ( compHand === 'Paper' && showResult.handType === 'Rock' ) || ( compHand === 'Rock' && showResult.handType === 'Scissors' ) || ( compHand === 'Scissors' && showResult.handType === 'Paper' ) : {\n          setResultType('You Lose');\n          return;\n        }\n      }\n    }, [ showResult ]);\n\n    return (\n      <div className={styles.root}>\n        {\n          ( showResult.src && compResult.src ) ?\n            <ResultsScreen showResult={showResult}\n                           setShowResult={setShowResult}\n                           resultType={resultType}\n                           compHand={compResult}\n                           setCompResult={setCompResult}/>\n            :\n            <InitialScreen setShowResult={setShowResult}/>\n        }\n      </div>\n    );\n  }\n;\n\nconst styles = {\n  root: css({\n    marginTop: 32,\n  })\n};\n\nGame.propTypes = propTypes;\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}