{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/rock-paper/src/components/InitialScreen.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { css } from 'emotion';\nimport rock from \"../images/icon-rock.svg\";\nimport paper from \"../images/icon-paper.svg\";\nimport scissors from \"../images/icon-scissors.svg\";\nconst propTypes = {\n  setShowResult: PropTypes.func\n};\nconst buttons = [{\n  color: 'red',\n  src: rock,\n  handType: 'Rock'\n}, {\n  color: 'yellow',\n  src: paper,\n  handType: 'Paper'\n}, {\n  color: 'blue',\n  src: scissors,\n  handType: 'Scissors'\n}];\n\nconst InitialScreen = ({\n  setShowResult\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, buttons.map(button => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setShowResult({\n        src: button.src,\n        color: button.color,\n        handType: button.handType\n      }),\n      key: button.src,\n      classes: {\n        root: styles.button({\n          color: button.color,\n          withDisplayBlock: button.color === 'blue',\n          withMarginRight: button.color === 'red'\n        })\n      },\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/React.createElement(\"img\", {\n        src: button.src,\n        alt: \"hand\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nconst styles = {\n  root: css({\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center'\n  }),\n  button: ({\n    color,\n    withDisplayBlock,\n    withMarginRight\n  }) => css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 200,\n      borderRadius: '50%',\n      display: withDisplayBlock ? 'block' : 'inline',\n      backgroundColor: 'white',\n      border: `20px solid ${color}`,\n      margin: 'auto',\n      marginRight: withMarginRight ? 24 : 'auto'\n    }\n  })\n};\nInitialScreen.propTypes = propTypes;\nexport default InitialScreen;","map":{"version":3,"sources":["/Users/yonatanronen/dev/rock-paper/src/components/InitialScreen.jsx"],"names":["React","PropTypes","Button","css","propTypes","setShowResult","func","buttons","color","src","rock","handType","paper","scissors","InitialScreen","styles","root","map","button","withDisplayBlock","withMarginRight","display","width","alignItems","height","borderRadius","backgroundColor","border","margin","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,GAAT,QAAoB,SAApB;;;;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,aAAa,EAAEJ,SAAS,CAACK;AADT,CAAlB;AAIA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,GAAG,EAAEC,IAFP;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CADc,EAMd;AACEH,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,GAAG,EAAEG,KAFP;AAGED,EAAAA,QAAQ,EAAE;AAHZ,CANc,EAWd;AACEH,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,GAAG,EAAEI,QAFP;AAGEF,EAAAA,QAAQ,EAAE;AAHZ,CAXc,CAAhB;;AAkBA,MAAMG,aAAa,GAAG,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAuB;AAE3C,sBACE;AAAK,IAAA,SAAS,EAAEU,MAAM,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIT,OAAO,CAACU,GAAR,CAAYC,MAAM,IAAI;AACpB,wBACE,uDACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMb,aAAa,CAAC;AAC3BI,QAAAA,GAAG,EAAES,MAAM,CAACT,GADe;AAE3BD,QAAAA,KAAK,EAAEU,MAAM,CAACV,KAFa;AAG3BG,QAAAA,QAAQ,EAAEO,MAAM,CAACP;AAHU,OAAD,CAD9B;AAME,MAAA,GAAG,EAAEO,MAAM,CAACT,GANd;AAOE,MAAA,OAAO,EAAE;AACPO,QAAAA,IAAI,EAAED,MAAM,CAACG,MAAP,CAAc;AAClBV,UAAAA,KAAK,EAAEU,MAAM,CAACV,KADI;AAElBW,UAAAA,gBAAgB,EAAED,MAAM,CAACV,KAAP,KAAiB,MAFjB;AAGlBY,UAAAA,eAAe,EAAEF,MAAM,CAACV,KAAP,KAAiB;AAHhB,SAAd;AADC,OAPX;AAcE,MAAA,OAAO,EAAC,WAdV;AAeE,MAAA,SAAS,eAAE;AAAK,QAAA,GAAG,EAAEU,MAAM,CAACT,GAAjB;AAAsB,QAAA,GAAG,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAqBD,GAtBD,CAFJ,CADF;AA6BD,CA/BD;;AAiCA,MAAMM,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAEb,GAAG,CAAC;AACRkB,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,KAAK,EAAE,MAFC;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAAD,CADI;AAMbL,EAAAA,MAAM,EAAE,CAAC;AAAEV,IAAAA,KAAF;AAASW,IAAAA,gBAAT;AAA2BC,IAAAA;AAA3B,GAAD,KAAkDjB,GAAG,CAAC;AAC5D,wBAAoB;AAClBmB,MAAAA,KAAK,EAAE,GADW;AAElBE,MAAAA,MAAM,EAAE,GAFU;AAGlBC,MAAAA,YAAY,EAAE,KAHI;AAIlBJ,MAAAA,OAAO,EAAEF,gBAAgB,GAAG,OAAH,GAAa,QAJpB;AAKlBO,MAAAA,eAAe,EAAE,OALC;AAMlBC,MAAAA,MAAM,EAAG,cAAanB,KAAM,EANV;AAOlBoB,MAAAA,MAAM,EAAE,MAPU;AAQlBC,MAAAA,WAAW,EAAET,eAAe,GAAG,EAAH,GAAQ;AARlB;AADwC,GAAD;AANhD,CAAf;AAoBAN,aAAa,CAACV,SAAd,GAA0BA,SAA1B;AAEA,eAAeU,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { css } from 'emotion';\nimport rock from '../images/icon-rock.svg';\nimport paper from '../images/icon-paper.svg';\nimport scissors from '../images/icon-scissors.svg';\n\nconst propTypes = {\n  setShowResult: PropTypes.func,\n};\n\nconst buttons = [\n  {\n    color: 'red',\n    src: rock,\n    handType: 'Rock'\n  },\n  {\n    color: 'yellow',\n    src: paper,\n    handType: 'Paper'\n  },\n  {\n    color: 'blue',\n    src: scissors,\n    handType: 'Scissors'\n  }\n];\n\nconst InitialScreen = ({ setShowResult }) => {\n\n  return (\n    <div className={styles.root}>\n      {\n        buttons.map(button => {\n          return (\n            <>\n              <Button\n                onClick={() => setShowResult({\n                  src: button.src,\n                  color: button.color,\n                  handType: button.handType\n                })}\n                key={button.src}\n                classes={{\n                  root: styles.button({\n                    color: button.color,\n                    withDisplayBlock: button.color === 'blue',\n                    withMarginRight: button.color === 'red'\n                  })\n                }}\n                variant=\"contained\"\n                startIcon={<img src={button.src} alt='hand'/>}\n              />\n            </>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nconst styles = {\n  root: css({\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center'\n  }),\n  button: ({ color, withDisplayBlock, withMarginRight }) => css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 200,\n      borderRadius: '50%',\n      display: withDisplayBlock ? 'block' : 'inline',\n      backgroundColor: 'white',\n      border: `20px solid ${color}`,\n      margin: 'auto',\n      marginRight: withMarginRight ? 24 : 'auto'\n    }\n  })\n};\n\nInitialScreen.propTypes = propTypes;\n\nexport default InitialScreen;\n"]},"metadata":{},"sourceType":"module"}