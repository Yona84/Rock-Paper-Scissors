{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/rock-paper/src/components/Game.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport InitialScreen from '../components/InitialScreen';\nimport ResultsScreen from '../components/ResultsScreen';\nconst propTypes = {\n  setScore: PropTypes.func\n};\nconst handTypes = ['Paper', 'Rock', 'Scissors'];\n\nconst Game = ({\n  setScore\n}) => {\n  const [showResult, setShowResult] = React.useState({\n    src: null,\n    color: null,\n    handType: null\n  });\n  const [resultType, setResultType] = React.useState('');\n  const firstUpdate = React.useRef(true);\n  React.useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    const compHand = handTypes[Math.floor(Math.random() * handTypes.length)];\n\n    switch (true) {\n      case compHand === 'Paper' && showResult.handType === 'Paper' || compHand === 'Rock' && showResult.handType === 'Rock' || compHand === 'Scissors' && showResult.handType === 'Scissors':\n        {\n          setResultType('Draw');\n          return;\n        }\n\n      case compHand === 'Paper' && showResult.handType === 'Scissors' || compHand === 'Rock' && showResult.handType === 'Paper' || compHand === 'Scissors' && showResult.handType === 'Rock':\n        {\n          setResultType('You Win!');\n          return;\n        }\n\n      case compHand === 'Paper' && showResult.handType === 'Rock' || compHand === 'Rock' && showResult.handType === 'Scissors' || compHand === 'Scissors' && showResult.handType === 'Paper':\n        {\n          setResultType('You Lose');\n          return;\n        }\n    }\n  }, [showResult]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, showResult.src ? /*#__PURE__*/React.createElement(ResultsScreen, {\n    showResult: showResult,\n    setShowResult: setShowResult,\n    resultType: resultType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(InitialScreen, {\n    setShowResult: setShowResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst styles = {\n  root: css({\n    marginTop: 32,\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center'\n  })\n};\nGame.propTypes = propTypes;\nexport default Game;","map":{"version":3,"sources":["/Users/yonatanronen/dev/rock-paper/src/components/Game.jsx"],"names":["React","PropTypes","css","InitialScreen","ResultsScreen","propTypes","setScore","func","handTypes","Game","showResult","setShowResult","useState","src","color","handType","resultType","setResultType","firstUpdate","useRef","useEffect","current","compHand","Math","floor","random","length","styles","root","marginTop","display","width","alignItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM;AADJ,CAAlB;AAIA,MAAMC,SAAS,GAAG,CAAE,OAAF,EAAW,MAAX,EAAmB,UAAnB,CAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAkB;AAE7B,QAAM,CAAEI,UAAF,EAAcC,aAAd,IAAgCX,KAAK,CAACY,QAAN,CAAe;AACnDC,IAAAA,GAAG,EAAE,IAD8C;AAEnDC,IAAAA,KAAK,EAAE,IAF4C;AAGnDC,IAAAA,QAAQ,EAAE;AAHyC,GAAf,CAAtC;AAMA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCjB,KAAK,CAACY,QAAN,CAAe,EAAf,CAAtC;AAEA,QAAMM,WAAW,GAAGlB,KAAK,CAACmB,MAAN,CAAa,IAAb,CAApB;AACAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAIF,WAAW,CAACG,OAAhB,EAAyB;AACvBH,MAAAA,WAAW,CAACG,OAAZ,GAAsB,KAAtB;AACA;AACD;;AACD,UAAMC,QAAQ,GAAGd,SAAS,CAAEe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,SAAS,CAACkB,MAArC,CAAF,CAA1B;;AAEA,YAAQ,IAAR;AACE,WAAMJ,QAAQ,KAAK,OAAb,IAAwBZ,UAAU,CAACK,QAAX,KAAwB,OAAjD,IAA8DO,QAAQ,KAAK,MAAb,IAAuBZ,UAAU,CAACK,QAAX,KAAwB,MAA7G,IAAyHO,QAAQ,KAAK,UAAb,IAA2BZ,UAAU,CAACK,QAAX,KAAwB,UAAjL;AAA+L;AAC7LE,UAAAA,aAAa,CAAC,MAAD,CAAb;AACA;AACD;;AACD,WAAMK,QAAQ,KAAK,OAAb,IAAwBZ,UAAU,CAACK,QAAX,KAAwB,UAAjD,IAAiEO,QAAQ,KAAK,MAAb,IAAuBZ,UAAU,CAACK,QAAX,KAAwB,OAAhH,IAA6HO,QAAQ,KAAK,UAAb,IAA2BZ,UAAU,CAACK,QAAX,KAAwB,MAArL;AAA+L;AAC7LE,UAAAA,aAAa,CAAC,UAAD,CAAb;AACA;AACD;;AACD,WAAMK,QAAQ,KAAK,OAAb,IAAwBZ,UAAU,CAACK,QAAX,KAAwB,MAAjD,IAA6DO,QAAQ,KAAK,MAAb,IAAuBZ,UAAU,CAACK,QAAX,KAAwB,UAA5G,IAA4HO,QAAQ,KAAK,UAAb,IAA2BZ,UAAU,CAACK,QAAX,KAAwB,OAApL;AAA+L;AAC7LE,UAAAA,aAAa,CAAC,UAAD,CAAb;AACA;AACD;AAZH;AAcD,GArBD,EAqBG,CAAEP,UAAF,CArBH;AAwBF,sBACE;AAAK,IAAA,SAAS,EAAEiB,MAAM,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIlB,UAAU,CAACG,GAAX,gBACE,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAEH,UAA3B;AACe,IAAA,aAAa,EAAEC,aAD9B;AAEe,IAAA,UAAU,EAAEK,UAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAKE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEL,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN,CADF;AAYC,CA/CD;;AAkDA,MAAMgB,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE1B,GAAG,CAAC;AACR2B,IAAAA,SAAS,EAAE,EADH;AAERC,IAAAA,OAAO,EAAE,MAFD;AAGRC,IAAAA,KAAK,EAAE,MAHC;AAIRC,IAAAA,UAAU,EAAE;AAJJ,GAAD;AADI,CAAf;AASAvB,IAAI,CAACJ,SAAL,GAAiBA,SAAjB;AAEA,eAAeI,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport InitialScreen from '../components/InitialScreen';\nimport ResultsScreen from '../components/ResultsScreen';\n\nconst propTypes = {\n  setScore: PropTypes.func,\n};\n\nconst handTypes = [ 'Paper', 'Rock', 'Scissors' ];\n\nconst Game = ({ setScore }) => {\n\n  const [ showResult, setShowResult ] = React.useState({\n    src: null,\n    color: null,\n    handType: null\n  });\n\n  const [ resultType, setResultType ] = React.useState('');\n\n  const firstUpdate = React.useRef(true);\n  React.useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const compHand = handTypes[ Math.floor(Math.random() * handTypes.length) ];\n\n    switch (true) {\n      case (compHand === 'Paper' && showResult.handType === 'Paper') || (compHand === 'Rock' && showResult.handType === 'Rock') || (compHand === 'Scissors' && showResult.handType === 'Scissors') : {\n        setResultType('Draw');\n        return;\n      }\n      case (compHand === 'Paper' && showResult.handType === 'Scissors') || (compHand === 'Rock' && showResult.handType === 'Paper') || (compHand === 'Scissors' && showResult.handType === 'Rock') : {\n        setResultType('You Win!');\n        return;\n      }\n      case (compHand === 'Paper' && showResult.handType === 'Rock') || (compHand === 'Rock' && showResult.handType === 'Scissors') || (compHand === 'Scissors' && showResult.handType === 'Paper') : {\n        setResultType('You Lose');\n        return;\n      }\n    }\n  }, [ showResult ]);\n\n\nreturn (\n  <div className={styles.root}>\n    {\n      showResult.src ?\n        <ResultsScreen showResult={showResult}\n                       setShowResult={setShowResult}\n                       resultType={resultType}/>\n        :\n        <InitialScreen setShowResult={setShowResult}/>\n    }\n  </div>\n);\n}\n;\n\nconst styles = {\n  root: css({\n    marginTop: 32,\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center'\n  })\n};\n\nGame.propTypes = propTypes;\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}