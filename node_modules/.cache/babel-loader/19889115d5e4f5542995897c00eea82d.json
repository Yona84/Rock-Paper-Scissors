{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/rock-paper/src/components/ResultsScreen.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport Button from '@material-ui/core/Button';\nconst propTypes = {\n  showResult: PropTypes.object,\n  setShowResult: PropTypes.func\n};\n\nconst ResultsScreen = ({\n  showResult,\n  setShowResult\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: styles.button({\n        color: showResult.color\n      })\n    },\n    variant: \"contained\",\n    startIcon: /*#__PURE__*/React.createElement(\"img\", {\n      src: showResult.src,\n      alt: \"hand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: styles.buttonRestart\n    },\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \" Play Again\"));\n};\n\nconst styles = {\n  root: css({\n    width: '100%'\n  }),\n  button: ({\n    color,\n    withDisplayBlock,\n    withMarginRight\n  }) => css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 200,\n      borderRadius: '50%',\n      display: withDisplayBlock ? 'block' : 'inline',\n      backgroundColor: 'white',\n      border: `20px solid ${color}`,\n      margin: 'auto',\n      marginRight: withMarginRight ? 24 : 'auto'\n    }\n  })\n};\nResultsScreen.propTypes = propTypes;\nexport default ResultsScreen;","map":{"version":3,"sources":["/Users/yonatanronen/dev/rock-paper/src/components/ResultsScreen.jsx"],"names":["React","PropTypes","css","Button","propTypes","showResult","object","setShowResult","func","ResultsScreen","styles","root","button","color","src","buttonRestart","width","withDisplayBlock","withMarginRight","height","borderRadius","display","backgroundColor","border","margin","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEJ,SAAS,CAACK,MADN;AAEhBC,EAAAA,aAAa,EAAEN,SAAS,CAACO;AAFT,CAAlB;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAAEJ,EAAAA,UAAF;AAAcE,EAAAA;AAAd,CAAD,KAAmC;AACvD,sBACE;AAAK,IAAA,SAAS,EAAEG,MAAM,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AACPA,MAAAA,IAAI,EAAED,MAAM,CAACE,MAAP,CAAc;AAClBC,QAAAA,KAAK,EAAER,UAAU,CAACQ;AADA,OAAd;AADC,KADX;AAME,IAAA,OAAO,EAAC,WANV;AAOE,IAAA,SAAS,eAAE;AAAK,MAAA,GAAG,EAAER,UAAU,CAACS,GAArB;AAA0B,MAAA,GAAG,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAED,MAAM,CAACK;AADN,KADX;AAIE,IAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF;AAqBD,CAtBD;;AAwBA,MAAML,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAET,GAAG,CAAC;AACRc,IAAAA,KAAK,EAAE;AADC,GAAD,CADI;AAIbJ,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,KAAF;AAASI,IAAAA,gBAAT;AAA2BC,IAAAA;AAA3B,GAAD,KAAkDhB,GAAG,CAAC;AAC5D,wBAAoB;AAClBc,MAAAA,KAAK,EAAE,GADW;AAElBG,MAAAA,MAAM,EAAE,GAFU;AAGlBC,MAAAA,YAAY,EAAE,KAHI;AAIlBC,MAAAA,OAAO,EAAEJ,gBAAgB,GAAG,OAAH,GAAa,QAJpB;AAKlBK,MAAAA,eAAe,EAAE,OALC;AAMlBC,MAAAA,MAAM,EAAG,cAAaV,KAAM,EANV;AAOlBW,MAAAA,MAAM,EAAE,MAPU;AAQlBC,MAAAA,WAAW,EAAEP,eAAe,GAAG,EAAH,GAAQ;AARlB;AADwC,GAAD;AAJhD,CAAf;AAkBAT,aAAa,CAACL,SAAd,GAA0BA,SAA1B;AAEA,eAAeK,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport Button from '@material-ui/core/Button';\n\nconst propTypes = {\n  showResult: PropTypes.object,\n  setShowResult: PropTypes.func\n};\n\nconst ResultsScreen = ({ showResult, setShowResult }) => {\n  return (\n    <div className={styles.root}>\n      {/*<OwnHand showResult={showResult} />*/}\n      <Button\n        classes={{\n          root: styles.button({\n            color: showResult.color,\n          })\n        }}\n        variant=\"contained\"\n        startIcon={<img src={showResult.src} alt='hand'/>}\n      />\n      <Button\n        classes={{\n          root: styles.buttonRestart\n        }}\n        variant=\"contained\"\n      > Play Again\n      </Button>\n    </div>\n  );\n};\n\nconst styles = {\n  root: css({\n    width: '100%'\n  }),\n  button: ({ color, withDisplayBlock, withMarginRight }) => css({\n    '&.MuiButton-root': {\n      width: 200,\n      height: 200,\n      borderRadius: '50%',\n      display: withDisplayBlock ? 'block' : 'inline',\n      backgroundColor: 'white',\n      border: `20px solid ${color}`,\n      margin: 'auto',\n      marginRight: withMarginRight ? 24 : 'auto'\n    }\n  })\n};\n\nResultsScreen.propTypes = propTypes;\n\nexport default ResultsScreen;\n"]},"metadata":{},"sourceType":"module"}